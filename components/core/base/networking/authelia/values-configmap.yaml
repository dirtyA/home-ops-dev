---
apiVersion: v1
kind: ConfigMap
metadata:
  name: &appname authelia
  namespace: networking
data: |
  ---
  default_redirection_url: https://authelia.${SECRET_DEV_DOMAIN}
 
  ## Options are totp, webauthn, mobile_push.
  default_2fa_method: ""
 
  ##
  ## TOTP Configuration
  ##
  totp:
    disable: false
    issuer: ${SECRET_DEV_DOMAIN}
    algorithm: sha1
    digits: 6
    period: 30
    skew: 1
 
  ##
  ## WebAuthn Configuration
  ##
  webauthn:
    disable: false
    timeout: 60s
    display_name: ${SECRET_DEV_DOMAIN}
    ## Options are none, indirect, direct.
    attestation_conveyance_preference: indirect
    ## Options are required, preferred, discouraged.
    user_verification: preferred
 
  ##
  ## Duo Push API Configuration
  ##
  ## Parameters used to contact the Duo API. Those are generated when you protect an application of type
  ## "Partner Auth API" in the management panel.
  duo_api:
    enabled: true
    hostname: api-b68b8774.duosecurity.com
    integration_key: DI2IGENLJKFDHSKGWT1L
    enable_self_enrollment: true
 
  ##
  ## Authentication Backend Provider Configuration
  ##
  authentication_backend:
    password_reset:
      disable: false
      custom_url: ""
 
    refresh_interval: 5m
 
    ## LDAP backend configuration.
    ##
    ldap:
      enabled: true
      implementation: custom
      url: ldap://${NAS_ADDR}
      timeout: 5s
      start_tls: false
 
      tls:
        server_name: ""
        skip_verify: false
        minimum_version: TLS1.2
 
      base_dn: dc=kao,dc=family
 
      username_attribute: uid
      additional_users_dn: cn=users
      users_filter: (&({username_attribute}={input})(objectClass=posixAccount))
 
      additional_groups_dn: cn=groups
      groups_filter: (&(member={dn})(objectclass=posixGroup))
      group_name_attribute: cn
 
      mail_attribute: mail
 
      display_name_attribute: displayname 
 
      permit_referrals: false
 
      ## Strongly discouraged. See https://www.authelia.com/configuration/first-factor/ldap/#permit_unauthenticated_bind.
      permit_unauthenticated_bind: false
 
      ## The username of the admin user.
      user: uid=autheliauser,cn=users,dc=kao,dc=family
 
    ##
    ## Redis Provider
    ##
    redis:
      enabled: true
      enabledSecret: false
      host: ${RURI_ADDR}
      port: 6379
      username: ""
      database_index: 0
      maximum_active_connections: 8
      minimum_idle_connections: 0
 
      tls:
        enabled: false
 
  ##
  ## Storage Provider Configuration
  ##
  storage:
    mysql:
      enabled: true
      host: 192.168.0.125
      port: 3306
      database: authelia-k3s
      username: authelia-k3s
      password: authelia
      timeout: 10s
 
    postgres:
      enabled: false
 
  ##
  ## Notification Provider
  ##
  ##
  notifier:
    disable_startup_check: false
 
    smtp:
      enabled: true
      enabledSecret: true
      host: email-smtp.us-west-2.amazonaws.com
      port: 587
      timeout: 5s
      username: AKIAWL74NM3JSZ73BVD5
      sender: mike@kao.family
      identifier: localhost
      subject: "[TheKaoCloud] {title}"
 
  identity_providers:
    oidc:
      ## Enables this in the config map. Currently in beta stage.
      ## See https://www.authelia.com/r/openid-connect/
      enabled: false
 
      access_token_lifespan: 1h
      authorize_code_lifespan: 1m
      id_token_lifespan: 1h
      refresh_token_lifespan: 90m
 
      ## Enables additional debug messages.
      enable_client_debug_messages: false
 
      ## Cross-Origin Resource Sharing (CORS) settings.
      cors:
        ## List of endpoints in addition to the metadata endpoints to permit cross-origin requests on.
        # endpoints:
        #    - authorization
        #    - token
        #    - revocation
        #    - introspection
        #    - userinfo
        endpoints: ["authorization", "token", "revocation", "introspection"]
        allowed_origins_from_client_redirect_uris: true
 
      clients: []
      # clients:
        # -
          ## The ID is the OpenID Connect ClientID which is used to link an application to a configuration.
          # id: myapp
 
          ## The description to show to users when they end up on the consent screen. Defaults to the ID above.
          # description: My Application
 
          ## The client secret is a shared secret between Authelia and the consumer of this client.
          # secret: apple123
 
          ## Sector Identifiers are occasionally used to generate pairwise subject identifiers. In most cases this is not
          ## necessary. Read the documentation for more information.
          ## The subject identifier must be the host component of a URL, which is a domain name with an optional port.
          # sector_identifier: example.com
 
          ## Sets the client to public. This should typically not be set, please see the documentation for usage.
          # public: false
 
          ## The policy to require for this client; one_factor or two_factor.
          # authorization_policy: two_factor
 
          ## By default users cannot remember pre-configured consents. Setting this value to a period of time using a
          ## duration notation will enable users to remember consent for this client. The time configured is the amount
          ## of time the pre-configured consent is valid for granting new authorizations to the user.
          # pre_configured_consent_duration: 30d
 
          ## Audience this client is allowed to request.
          # audience: []
 
          ## Scopes this client is allowed to request.
          # scopes:
          #   - openid
          #   - profile
          #   - email
          #   - groups
 
          ## Redirect URI's specifies a list of valid case-sensitive callbacks for this client.
          # redirect_uris:
          #   - https://oidc.example.com/oauth2/callback
 
          ## Grant Types configures which grants this client can obtain.
          ## It's not recommended to configure this unless you know what you're doing.
          # grant_types:
          #   - refresh_token
          #   - authorization_code
 
          ## Response Types configures which responses this client can be sent.
          ## It's not recommended to configure this unless you know what you're doing.
          # response_types:
          #   - code
 
          ## Response Modes configures which response modes this client supports.
          ## It's not recommended to configure this unless you know what you're doing.
          # response_modes:
          #   - form_post
          #   - query
          #   - fragment
 
          ## The algorithm used to sign userinfo endpoint responses for this client, either none or RS256.
          # userinfo_signing_algorithm: none
 
