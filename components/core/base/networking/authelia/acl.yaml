---
apiVersion: v1
kind: ConfigMap
metadata:
  name: authelia-acl
  namespace: networking
      ##
      ## Access Control Configuration
      ##
      ## Access control is a list of rules defining the authorizations applied for one resource to users or group of users.
      ##
      ## If 'access_control' is not defined, ACL rules are disabled and the 'bypass' rule is applied, i.e., access is allowed
      ## to anyone. Otherwise restrictions follow the rules defined.
      ##
      ## Note: One can use the wildcard * to match any subdomain.
      ## It must stand at the beginning of the pattern. (example: *.mydomain.com)
      ##
      ## Note: You must put patterns containing wildcards between simple quotes for the YAML to be syntactically correct.
      ##
      ## Definition: A 'rule' is an object with the following keys: 'domain', 'subject', 'policy' and 'resources'.
      ##
      ## - 'domain' defines which domain or set of domains the rule applies to.
      ##
      ## - 'subject' defines the subject to apply authorizations to. This parameter is optional and matching any user if not
      ##    provided. If provided, the parameter represents either a user or a group. It should be of the form
      ##    'user:<username>' or 'group:<groupname>'.
      ##
      ## - 'policy' is the policy to apply to resources. It must be either 'bypass', 'one_factor', 'two_factor' or 'deny'.
      ##
      ## - 'resources' is a list of regular expressions that matches a set of resources to apply the policy to. This parameter
      ##   is optional and matches any resource if not provided.
data: |-

  default_policy: one_factor

  networks:
  - name: private
    networks:
    - 10.0.0.0/8
    - 172.16.0.0/12
    - 192.168.0.0/16

  ## Note: the order of the rules is important. The first policy matching (domain, resource, subject) applies.
  rules:
  - domain: authelia.${SECRET_DEV_DOMAIN}
    policy: bypass
  - domain:
      - "dsm.${SECRET_DEV_DOMAIN}"
    policy: two_factor
      #- domain: "*.${SECRET_DEV_DOMAIN}"
      #  policy: bypass
      #  networks:
      #    - private
  - domain:
      - "${SECRET_DEV_DOMAIN}"
      - "*.${SECRET_DEV_DOMAIN}"
    policy: two_factor
    subject:
      - "group:administrators"
  - domain:
      - "*.${SECRET_DEV_DOMAIN}"
      - "${SECRET_DEV_DOMAIN}"
    policy: one_factor
  # rules:
  # - domain_regex: '^.*\.example.com$'
  #   policy: bypass
  # - domain: public.example.com
  #   policy: bypass
  # - domain: "*.example.com"
  #   policy: bypass
  #   methods:
  #   - OPTIONS
  # - domain: secure.example.com
  #   policy: one_factor
  #   networks:
  #   - private
  #   - vpn
  #   - 192.168.1.0/24
  #   - 10.0.0.1
  # - domain:
  #   - secure.example.com
  #   - private.example.com
  #   policy: two_factor
  # - domain: singlefactor.example.com
  #   policy: one_factor
  # - domain: "mx2.mail.example.com"
  #   subject: "group:admins"
  #   policy: deny
  # - domain: "*.example.com"
  #   subject:
  #   - "group:admins"
  #   - "group:moderators"
  #   policy: two_factor
  # - domain: dev.example.com
  #   resources:
  #   - "^/groups/dev/.*$"
  #   subject: "group:dev"
  #   policy: two_factor
  # - domain: dev.example.com
  #   resources:
  #   - "^/users/john/.*$"
  #   subject:
  #   - ["group:dev", "user:john"]
  #   - "group:admins"
  #   policy: two_factor
  # - domain: "{user}.example.com"
  #   policy: bypass
