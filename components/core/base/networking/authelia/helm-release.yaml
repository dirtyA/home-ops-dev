---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &appname authelia
  namespace: networking
spec:
  interval: 5m
  chart:
    spec:
      chart: *appname
      version: 0.8.38
      sourceRef:
        kind: HelmRepository
        name: authelia-charts
        namespace: flux-system
      interval: 5m
  dependsOn:
    - name: cert-manager
      namespace: cert-manager
  install:
    createNamespace: true
    remediation:
      retries: 4
  upgrade:
    remediation:
      retries: 3
  values:
    image:
      repository: ghcr.io/authelia/authelia
      tag: 4.36.1
      pullPolicy: IfNotPresent
    deployment:
      kind: Deployment
      replicas: 1
    service:
      enabled: true
      type: LoadBalancer
      port: 80
      spec:
        loadBalancerIP: "${SVC_AUTHELIA_ADDR}"
        externalTrafficPolicy: Local
      annotations:
        metallb.universe.tf/address-pool: dev-infra
    pod:
      # Must be Deployment, DaemonSet, or StatefulSet.
      kind: Deployment
      replicas: 1

    envFrom:
      - secretRef:
          name: *appname

    ## Authelia Domain
    ## Should be the root domain you want to protect.
    ## For example if you have apps app1.example.com and app2.example.com it should be example.com
    ## This affects the ingress (partially sets the domain used) and configMap.
    ## Authelia must be served from the domain or a subdomain under it.
    domain: ${SECRET_DEV_DOMAIN}

    ##
    ## Authelia Config Map Generator
    ##
    configMap:
      enabled: true
    
      annotations: {}
      labels: {}
    
      key: configuration.yaml
    
      existingConfigMap: ""
    
      log:
        level: info
        format: text
        ## File path where the logs will be written. If not set logs are written to stdout.
        # file_path: /config/authelia.log
        file_path: /config/authelia.log
    
      ##
      ## Telemetry Configuration
      ##
      telemetry:
        metrics:
          enabled: false
          port: 9959
    
          serviceMonitor:
            enabled: false
            annotations: {}
            labels: {}
    
      theme: light
    
      ##
      ## Password Policy Configuration.
      ##
      password_policy:
        standard:
          enabled: false
          min_length: 8
          max_length: 0
          require_uppercase: true
          require_lowercase: true
          require_number: true
          require_special: true
    
        ## zxcvbn is a well known and used password strength algorithm. It does not have tunable settings.
        zxcvbn:
          enabled: false
          min_score: 0
    
      ##
      ## Access Control Configuration
      ##
      access_control:
        secret:
          enabled: true
          key: configuration.acl.yaml
          existingSecret: ""
    
      ##
      ## Session Provider Configuration
      ##
      session:
        name: thekaocloud_auth_session
        same_site: lax
        expiration: 1h
        inactivity: 5m
        remember_me_duration: 1M
    
      ##
      ## Regulation Configuration
      ##
      ## This mechanism prevents attackers from brute forcing the first factor. It bans the user if too many attempts are done
      ## in a short period of time.
      regulation:
        max_retries: 3
        find_time: 2m
        ban_time: 5m
    
    ##
    ## Authelia Secret Generator.
    ##
    secret:
      existingSecret: *appname
    
      annotations: {}
      labels: {}
    
      mountPath: /secrets
    
      ## Secrets.
      jwt:
        key: JWT_SECRET
      ldap:
        key: LDAP_PASSWORD
      storage:
        key: STORAGE_PASSWORD
      storageEncryptionKey:
        key: STORAGE_ENCRYPTION_KEY
      session:
        key: SESSION_SECRET
      duo:
        key: DUO_SECRET_KEY
      redis:
        key: REDIS_PASSWORD
      redisSentinel:
        key: REDIS_SENTINEL_PASSWORD
      smtp:
        key: SMTP_PASSWORD
      oidcPrivateKey:
        key: OIDC_ISSUER_PRIVATE_KEY
      oidcHMACSecret:
        key: OIDC_HMAC_SECRET
    
