global
    daemon
    maxconn 256

defaults
    mode tcp
    timeout connect 4s
    timeout client 30s
    timeout server 30s
    retry-on all-retryable-errors

resolvers cluster_ns
    parse-resolv-conf

    hold valid    10s
    hold other    30s
    hold refused  30s
    hold nx       30s
    hold timeout  30s
    hold obsolete 30s

    resolve_retries 3
    timeout retry 1s
    timeout resolve 1s

frontend http
    bind :8080
    http-request use-service prometheus-exporter if { path /metrics }
    default_backend stats

backend stats
    mode http
    stats enable
    stats uri /
    stats refresh 5s
    stats show-legends
    stats admin if TRUE

resolvers k8s
    parse-resolv-conf
    hold other           10s
    hold refused         10s
    hold nx              10s
    hold timeout         10s
    hold valid           10s
    hold obsolete        10s

frontend maraidb-read
    bind *:3306
    default_backend maraidb-online

frontend maraidb-write
    bind *:3306
    default_backend maraidb-primary

backend maraidb-primary
    balance first
    option tcp-check
    tcp-check connect port 3306
    tcp-check send AUTH\ ${SECRET_MARIADB_PASSWORD}\r\n
    tcp-check send info\ replication\r\n
    tcp-check expect string role:master
    tcp-check send QUIT
    server maraidb-0 maraidb-node-0.maraidb-headless.databases.svc.cluster.local check inter 5s resolvers cluster_ns
    server maraidb-1 maraidb-node-1.maraidb-headless.databases.svc.cluster.local check inter 5s resolvers cluster_ns

backend maraidb-online
    balance roundrobin
    option tcp-check
    tcp-check connect port 3306
    tcp-check send AUTH\ ${SECRET_MARIADB_PASSWORD}\r\n
    tcp-check send PING\r\n
    tcp-check expect string +PONG
    tcp-check send QUIT
    server maraidb-0 maraidb-node-0.maraidb-headless.databases.svc.cluster.local check inter 5s resolvers cluster_ns
    server maraidb-1 maraidb-node-1.maraidb-headless.databases.svc.cluster.local check inter 5s resolvers cluster_ns

